@using DumaemSchool.Core.Commands.Auth

@inject ISnackbar Snackbar
@inject ISender Sender;
@inject NavigationManager NavigationManager;

<MudForm @ref="@_form" @onsubmit="@(ChangePassword)">
    <MudContainer Class="d-flex align-center justify-center mud-width-full" style="height:70vh;">
        <MudGrid>
            <MudItem xs="12" sm="12" lg="12">
                <MudCard>
                    <MudCardHeader>
                        <h2>Новый пароль</h2>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudTextField Label="Пароль"
                                      @bind-Value="_model.NewPassword" Immediate For="@(() => _model.NewPassword)"
                                      Required="true" InputType="_passwordInput"
                                      Adornment="Adornment.End" AdornmentIcon="@_passwordInputIcon"
                                      RequiredError="Обязательное поле"
                                      OnAdornmentClick="ShowPasswordClick" AdornmentAriaLabel="Показать пароль"/>
                        <MudTextField Label="Повтор пароля"
                                      @bind-Value="_model.NewPasswordRepeat" Immediate For="@(() => _model.NewPasswordRepeat)"
                                      Required="true" InputType="_passwordInput"
                                      RequiredError="@(_model.NewPassword == _model.NewPasswordRepeat ? "Обязательное поле" : "Пароли не совпадают")"/>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Disabled="@(string.IsNullOrEmpty(_model.NewPassword) || string.IsNullOrEmpty(_model.NewPasswordRepeat) 
                                               || _model.NewPassword != _model.NewPasswordRepeat)"
                                   FullWidth="true" Variant="Variant.Filled" Color="Color.Primary"
                                   ButtonType="ButtonType.Submit"
                                   Class="ml-auto" Style="width:12%">
                            Установить
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </MudContainer>
</MudForm>

@code {

    [Parameter]
    public string UserEmail { get; set; } = null!;

    MudForm? _form;
    private PasswordSettingCredentials _model = new();

    bool _isShowPassword;
    InputType _passwordInput = InputType.Password;
    string _passwordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ShowPasswordClick()
    {
        @if (_isShowPassword)
        {
            _isShowPassword = false;
            _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
            _passwordInput = InputType.Password;
        }
        else
        {
            _isShowPassword = true;
            _passwordInputIcon = Icons.Material.Filled.Visibility;
            _passwordInput = InputType.Text;
        }
    }

    private async Task ChangePassword()
    {
        var command = new SetUserPasswordCommand(UserEmail, _model.NewPassword);
        await Sender.Send(command);

        
        NavigationManager.NavigateTo("/login", true);
    }

}