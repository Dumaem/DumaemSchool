@using DumaemSchool.BlazorWeb.Data
<MudCard>
    <MudCardHeader>
        <h2>Авторизация</h2>
    </MudCardHeader>
    <MudCardContent>
        <MudTextField Label="Почта" Class="mt-3" Required="true"
                      @bind-Value="Model.Email" InputType="InputType.Email" Immediate For="@(() => Model.Email)"/>

        <MudTextField Label="Пароль" Class="mt-3"
                      @bind-Value="Model.Password" Immediate For="@(() => Model.Password)"
                      Required="true" InputType="_passwordInput"
                      Adornment="Adornment.End" AdornmentIcon="@_passwordInputIcon"
                      OnAdornmentClick="ShowPasswordClick" AdornmentAriaLabel="Показать пароль"/>

    </MudCardContent>
    <MudCardActions>
        <MudButton Disabled="@(!IsFormFilled())" ButtonType="MudBlazor.ButtonType.Submit"
                   Variant="MudBlazor.Variant.Filled" Color="Color.Primary" Class="ml-auto" Style="width:12%">
            Войти
        </MudButton>
    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    public LoginCredentials Model { get; set; } = null!;
    
    bool _isShow;
    InputType _passwordInput = InputType.Password;
    string _passwordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ShowPasswordClick()
    {
        @if (_isShow)
        {
            _isShow = false;
            _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
            _passwordInput = InputType.Password;
        }
        else
        {
            _isShow = true;
            _passwordInputIcon = Icons.Material.Filled.Visibility;
            _passwordInput = InputType.Text;
        }
    }
    
    private bool IsFormFilled()
    {
        return Model.Email != "" && Model.Password != "";
    }
}