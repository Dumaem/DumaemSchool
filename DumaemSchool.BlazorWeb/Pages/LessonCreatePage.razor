@page "/lesson"
@using DumaemSchool.Core.OutputModels
@using Variant = MudBlazor.Variant
@using System.Globalization
@using Orientation = MudBlazor.Orientation

@inject IDialogService DialogService;

<MudContainer MaxWidth="MaxWidth.ExtraLarge" style="height:70vh; margin-top: 2%">
    <div class="d-flex justify-content-md-between align-items-end">
        <MudTextField InputType="InputType.Text" Variant="Variant.Text" T="string" ReadOnly="true" Label="Кружок" @bind-Value="@(_selectedSection.GroupName)"/>
        <MudButton Style="margin-left: 2%" Variant="Variant.Filled" OnClick="@ShowSections" Color="Color.Primary">Выбрать кружок</MudButton>
    </div>
    <div class="d-flex justify-content-md-between flex-row align-items-start mt-5">
        <MudContainer Class="ma-0 pa-0" MaxWidth="MaxWidth.False">
            <MudTable Items="_selectedSectionSchedule" T="SectionSchedule">
                <HeaderContent>
                    <MudTh>День недели</MudTh>
                    <MudTh>Время</MudTh>
                    <MudTh>Продолжительность</MudTh>
                    <MudTh>Кабинет</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>
                        <MudText>@(DateTimeFormatInfo.CurrentInfo.GetDayName(context.DayOfWeek))</MudText>
                    </MudTd>
                    <MudTd>
                        <MudText>@context.Time</MudText>
                    </MudTd>
                    <MudTd>
                        <MudText>@context.Duration </MudText>
                    </MudTd>
                    <MudTd>
                        <MudText>@context.Cabinet</MudText>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        </MudContainer>
        <MudButton Disabled="@(_selectedSection.Id == 0)" Style="margin-left: 2%" Variant="Variant.Filled" OnClick="@ShowSchedule" Color="Color.Primary">Выбрать расписание</MudButton>
    </div>
    <MudContainer Class="pa-0 ma-0 mt-5" MaxWidth="MaxWidth.False">
        <MudDatePicker MinDate="@(DateTime.Now - TimeSpan.FromDays(1))" @bind-Date="_selectedDate" Disabled="@(_selectedSectionSchedule.Count <= 0)" PickerVariant="PickerVariant.Dialog" Variant="Variant.Text" Label="Дата проведения"
                       IsDateDisabledFunc="@((DateTime dt) => dt.DayOfWeek != _selectedSectionSchedule.First().DayOfWeek)"/>
    </MudContainer>
</MudContainer>

@code {
    private SectionInfo _selectedSection = new();
    private List<SectionSchedule> _selectedSectionSchedule = new();
    private DateTime? _selectedDate;

    private async Task ShowSections()
    {
        var options = new MudBlazor.DialogOptions
        {
            CloseOnEscapeKey = true, DisableBackdropClick = true, FullWidth = true,
            CloseButton = true, MaxWidth = MaxWidth.Large
        };
        var parameters = new DialogParameters
        {
            ["IsForLesson"] = true
        };

        var dialog = await DialogService.ShowAsync<Sections>("Выбор кружка", parameters, options);

        var result = await dialog.Result;

        if (!result.Canceled)
        {
            _selectedSection = (SectionInfo)result.Data;
        }
    }

    private async Task ShowSchedule()
    {
        var options = new MudBlazor.DialogOptions
        {
            CloseOnEscapeKey = true, DisableBackdropClick = true, FullWidth = true,
            CloseButton = true, MaxWidth = MaxWidth.Large
        };
        var parameters = new DialogParameters
        {
            ["IsForLesson"] = true,
            ["SectionId"] = _selectedSection.Id
        };

        var dialog = await DialogService.ShowAsync<Schedule>("Выбор из расписания", parameters, options);

        var result = await dialog.Result;

        if (!result.Canceled)
        {
            _selectedSectionSchedule.Clear();
            _selectedSectionSchedule.Add((SectionSchedule)result.Data);
        }
        await InvokeAsync(StateHasChanged);
    }

}