@page "/lesson"
@using DumaemSchool.Core.OutputModels
@using Variant = MudBlazor.Variant

@inject IDialogService DialogService;

<MudContainer MaxWidth="MaxWidth.ExtraLarge" style="height:70vh; margin-top: 2%">
    <div class="d-flex justify-content-md-between align-items-end">
        <MudTextField InputType="InputType.Text" Variant="Variant.Text" T="string" ReadOnly="true" Label="Кружок" @bind-Value="@(_selectedSection.GroupName)"/>
        <MudButton Style="margin-left: 2%" Variant="Variant.Filled" OnClick="@ShowSections" Color="Color.Primary">Выбрать кружок</MudButton>
    </div>
    <div class="d-flex justify-content-md-between align-items-end">
            <MudTextField InputType="InputType.Text" Variant="Variant.Text" T="string" ReadOnly="true" Label="Кружок" @bind-Value="@(_selectedSection.GroupName)"/>
            <MudButton Style="margin-left: 2%" Variant="Variant.Filled" OnClick="@ShowSections" Color="Color.Primary">Выбрать кружок</MudButton>
        </div>
</MudContainer>

@code {
    private SectionInfo _selectedSection = new();

    private async Task ShowSections()
    {
        var options = new MudBlazor.DialogOptions
        {
            CloseOnEscapeKey = true, DisableBackdropClick = true, FullWidth = true,
            CloseButton = true, MaxWidth = MaxWidth.Large
        };
        var parameters = new DialogParameters
        {
            ["IsForLesson"] = true
        };

        var dialog = await DialogService.ShowAsync<Sections>("Выбор кружка", parameters, options);

        var result = await dialog.Result;

        if (!result.Canceled)
        {
            _selectedSection = (SectionInfo)result.Data;
        }
    }

}