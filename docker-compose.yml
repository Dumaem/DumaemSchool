version: '3.4'

services:
  storage:
    container_name: storage
    image: postgres:latest
    restart: always
    command: ["postgres", "-c", "log_statement=mod"]
    ports:
      - "${POSTGRES_OUTER_PORT}:${POSTGRES_INNER_PORT}"
    environment:
      POSTGRES_DB: $POSTGRES_DATABASE_NAME
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      TZ: Europe/Moscow
    volumes:
      - ~/volumes/postgres:/var/lib/postgresql/data
      - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DATABASE_NAME} -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 10

  app:
    container_name: app
    build:
      context: .
    restart: on-failure
    depends_on:
      storage:
        condition: service_healthy
    ports:
      - "${APP_HTTP_PORT}:80"
      - "${APP_HTTPS_PORT}:443"
    environment:
      ASPNETCORE_ENVIRONMENT: $ASPNETCORE_ENVIRONMENT
      ASPNETCORE_URLS: https://+;http://+;
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/$CERTIFICATE_NAME
      ASPNETCORE_Kestrel__Certificates__Default__Password: $ASPNETCORE_Password
      TZ: Europe/Moscow
    stdin_open: true
    tty: true
    volumes:
      - type: bind
        source: ./drivingschoolwingim.pfx
        target: /https/drivingschoolwingim.pfx
